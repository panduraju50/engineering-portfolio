# GitHub Actions Workflow: Basic CI

name: Basic CI

on:
  push:
    branches: [ main, master, develop ] # Adjust branch names as needed
  pull_request:
    branches: [ main, master, develop ] # Adjust branch names as needed

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    # Frontend Build/Test (Example - customize for your framework)
    - name: Setup Node.js (for Frontend)
      uses: actions/setup-node@v3
      with:
        node-version: '18' # Specify your Node.js version
    - name: Install Frontend Dependencies
      run: |
        cd frontend
        # npm install # Uncomment if you have a package.json
        echo "Simulating frontend dependency installation"
    - name: Run Frontend Linter/Tests (Placeholder)
      run: |
        cd frontend
        # npm run lint # Uncomment and configure if you have a linter
        # npm test # Uncomment and configure if you have tests
        echo "Simulating frontend linting and tests"

    # Backend Build/Test (Spring Boot with Gradle)
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17' # Or the version specified in your build.gradle.kts
        distribution: 'temurin' # Or 'adopt', 'zulu', etc.
    - name: Grant execute permission for gradlew
      run: chmod +x backend/gradlew
    - name: Build and Test Backend with Gradle
      run: |
        cd backend
        ./gradlew build
    - name: Upload Backend Test Results (Optional)
      uses: actions/upload-artifact@v3
      if: always() # Upload even if tests fail
      with:
        name: backend-test-results
        path: backend/build/reports/tests/test/

    # Placeholder for Docker Build & Push (Example for Backend)
    # This assumes you have a Dockerfile in the 'backend' directory
    - name: Login to Docker Hub (or your container registry)
      if: github.event_name == 'push' && github.ref == 'refs/heads/main' # Example: Only on push to main
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }} # Needs to be configured in GitHub secrets
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }} # Needs to be configured in GitHub secrets
    - name: Build and push Docker image for Backend
      if: github.event_name == 'push' && github.ref == 'refs/heads/main' # Example: Only on push to main
      uses: docker/build-push-action@v4
      with:
        context: ./backend # Path to the Dockerfile and build context
        push: true
        tags: yourdockerhubusername/portfolio-backend:latest # Replace with your image name
        # You can add more sophisticated tagging strategies, e.g., using commit SHA:
        # tags: yourdockerhubusername/portfolio-backend:${{ github.sha }}, yourdockerhubusername/portfolio-backend:latest

    - name: Placeholder for K8s Deployment (Example)
      if: github.event_name == 'push' && github.ref == 'refs/heads/main' # Example: Only on push to main
      run: |
        echo "Simulating Kubernetes deployment..."
        # Example:
        # kubectl apply -f kubernetes/deployments/backend-deployment.yaml -n your-namespace
        # kubectl rollout status deployment/backend-deployment -n your-namespace
        # Or using Helm:
        # helm upgrade --install my-app-release ./kubernetes/helm-charts/my-application --namespace your-namespace --values ./kubernetes/helm-charts/my-application/values-prod.yaml
